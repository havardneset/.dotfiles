
let mapleader = " "

" Set relative line numbers
set relativenumber number

" Set clipboard to system clipboard
set clipboard=unnamedplus

xnoremap p "_dP

" Map telescope actions to IntelliJ actions
nnoremap <leader>sg :action FindInPath<CR>
nnoremap <leader>sf :action SearchEverywhere<CR>
map <leader><leader> <action>(RecentFiles)
nmap <leader>gd <Action>(GotoDeclaration)
nmap <leader>gy <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap <leader>gu <Action>(ShowUsages)

" Commenting
vmap gc <action>(CommentByLineComment)
nmap gcc <action>(CommentByLineComment)
nnoremap <leader>ca :action ShowIntentionActions<CR>

" Highlight search results
:set hlsearch
:set ignorecase
:set smartcase

" clear search highlight
nnoremap <Esc> :nohlsearch<CR>

" Centralize screen after moving
nmap <C-d> <C-d>zz
nmap <C-u> <C-u>zz

" Map Ctrl+h to move to the left tab
nnoremap <C-h> :tabprevious<CR>

" Map Ctrl+l to move to the right tab
nnoremap <C-l> :tabnext<CR>

" Remap 'c' to prevent it from overwriting the unnamed register
nnoremap c "_c
nnoremap C "_C
nnoremap cc "_cc
vnoremap c "_c

" Start of line (like ^)
nmap gh ^
vmap gh ^
omap gh ^

" End of line (like $)
nmap gl $
vmap gl $
omap gl $

" Matching pair (like %)
nmap gj %
vmap gj %
omap gj %

" Map to reformat code
map <leader>f :action ReformatCode<CR>

" Map to rename element
map <leader>rn <Action>(RenameElement)

" breakpoints
map <leader>ub <Action>(ToggleLineBreakpoint)
map <leader>us <Action>(ViewBreakpoints)
map <leader>ur <Action>(Debugger.RemoveAllBreakpoints)

"Run and debug
nnoremap <leader>rr :action Run<CR>
nnoremap <leader>rd :action Debug<CR>
nnoremap <leader>rs :action Stop<CR>

map <leader>en :action GotoNextError<CR>
map <leader>ep :action GotoPreviousError<CR>

nmap s <Action>(flash.search)
xmap s <Action>(flash.search)

" Source .ideavimrc
nnoremap <leader>si :source ~/.ideavimrc<CR>
nmap <leader>so :e ~/.ideavimrc<CR>
" Plugins
set mini-ai
Plug 'machakann/vim-highlightedyank'
Plug 'vim-scripts/argtextobj.vim'

